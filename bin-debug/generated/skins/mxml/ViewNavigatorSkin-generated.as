
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    skins.mxml
 *  Class:      ViewNavigatorSkin
 *  Source:     /Users/simeon/Documents/Adobe Flash Builder 4.5/BarlessMobile/src/skins/mxml/ViewNavigatorSkin.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2011.07.08 22:34:51 PDT
 */

package skins.mxml
{

import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filesystem.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.IStateClient2;
import mx.core.mx_internal;
import mx.filters.*;
import mx.states.State;
import mx.styles.*;
import spark.components.Group;
import spark.components.supportClasses.Skin;



		[HostComponent("spark.components.ViewNavigator")]
	
[States("landscapeAndOverlay", "portraitAndOverlay", "landscape", "portrait", "disabled", "normal")]

//  begin class def
public class ViewNavigatorSkin
    extends spark.components.supportClasses.Skin
    implements mx.core.IStateClient2
{

    //  instance variables
    [Bindable]
	/**
 * @private
 **/
    public var contentGroup : spark.components.Group;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function ViewNavigatorSkin()
    {
        super();

        mx_internal::_document = this;




        // layer initializers

       
        // properties
        this.mxmlContent = [_ViewNavigatorSkin_Group1_i()];
        this.currentState = "landscapeAndOverlay";


        // events



		states = [
		  new State ({
		    name: "landscapeAndOverlay",
		    overrides: [
		    ]
		  })
		  ,
		  new State ({
		    name: "portraitAndOverlay",
		    overrides: [
		    ]
		  })
		  ,
		  new State ({
		    name: "landscape",
		    overrides: [
		    ]
		  })
		  ,
		  new State ({
		    name: "portrait",
		    overrides: [
		    ]
		  })
		  ,
		  new State ({
		    name: "disabled",
		    overrides: [
		    ]
		  })
		  ,
		  new State ({
		    name: "normal",
		    overrides: [
		    ]
		  })
		];









    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  end scripts


    //  supporting function definitions for properties, events, styles, effects
private function _ViewNavigatorSkin_Group1_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.id = "contentGroup";
	if (!temp.document) temp.document = this;
	contentGroup = temp;
	mx.binding.BindingManager.executeBindings(this, "contentGroup", contentGroup);
	return temp;
}





    //  embed carrier vars
    //  end embed carrier vars


//  end class def
}

//  end package def
}
